<?xml version='1.0' encoding='utf-8'?>
<AQAClientConfig>

    <!-- Directory containing data files.  Try them in order until one works. -->
    <DataDirList>
        <DataDir>D:\Program Files\UMRO\AQAClient\data</DataDir>
        <DataDir>E:\Program Files\UMRO\AQAClient\data</DataDir>
        <DataDir>C:\Program Files\UMRO\AQAClient\data</DataDir>
    </DataDirList>

    <!--
    DICOMClient is the identity of the AQAClient.
    DICOMSource is the PACS or treatment planning system (e.g. Varian) where DICOM files are retrieved from.

    Both must be set up so that the PACS will recognize the AQAClient.

    The pairs below are various possible configurations, but only one can be active at a time.
    -->

    <!-- VMSDBD TEST -->
    <!--
    <DICOMClient AETitle='WLQA_TEST'      Host='141.214.125.209' Port='5682'  />
    <DICOMSource AETitle='VMSDBD'         Host='10.30.65.100'    Port='105'   />
    -->

    <!-- VMSDBD TEST -->
    <!--
    <DICOMClient AETitle='IRRER_TEST'     Host='141.214.125.209' Port='5662'  />
    <DICOMSource AETitle='VMSDBD'         Host='uhroariasts1'    Port='105'   />
    -->

    <!-- VMSDBD PRODUCTION -->
    <!--
    <DICOMClient AETitle='IRRER_CLINICAL' Host='141.214.125.209' Port='5660'  />
    <DICOMSource AETitle='VMSDBD'         Host='uhroariaspr1'    Port='105'   />
    -->

    <!-- VMSDBD PRODUCTION -->
    <DICOMClient AETitle='WLQA_TEST'      Host='141.214.125.209' Port='5682'  />
    <DICOMSource AETitle='VMSDBD'         Host='uhroariaspr1'    Port='105'   />

    <!-- Jim's Conquest server. -->
    <!--
    <DICOMClient AETitle='AQACLIENTIRRER' Host='141.214.125.209' Port='14567' />
    <DICOMSource AETitle='IRRER'          Host='141.214.125.209' Port='15678' />
    -->

    <!-- Interval (in seconds as a whole integer) to wait between each query of the DICOM source for
    new files.  If less than 1 then do not poll. -->
    <PollInterval_sec>30</PollInterval_sec>

    <!-- List of polling intervals.  When polling the DICOM source (usually ARIA), look at the date of
    the patient's most recent file.  If it is newer than 'age_day', then that patient will be polled
    every 'poll_sec' seconds.
    -->
    <PollIntervalList>
        <PollInterval  poll_sec= "15.0"  age_day =   "5.0"/>  <!-- Meant for daily processing. -->
        <PollInterval  poll_sec= "60.0"  age_day =  "64.0"/>  <!-- Just over two months for monthly QA. -->
        <PollInterval  poll_sec="120.0"  age_day = "190.0"/>  <!-- Just over a half a year. -->
        <PollInterval  poll_sec="300.0"  age_day = "380.0"/>  <!-- Just over a year.  Probably means that the patient is totally inactive. -->
    </PollIntervalList>
    
    <!-- Timeout (in seconds as a floating point) to wait before timing out for a failed HTTPS GET operation. Default 60.0 seconds. -->
    <HttpsGetTimeout_sec>60.0</HttpsGetTimeout_sec>

    <!-- Timeout (in seconds as a floating point) to wait before retrying a failed HTTPS operation. Default 10.0 seconds. -->
    <HttpsRetryTimeout_sec>10.0</HttpsRetryTimeout_sec>


    <!-- Timeout (in seconds as a floating point) to wait before timing out for an HTTPS upload.  This must be long to allow the site to perform the analysis on the data. -->
    <HttpsUploadTimeout_sec>240.0</HttpsUploadTimeout_sec>

    <!-- After initial upload attempt has been made, if the upload fails, then retry this many times.  A value of 0 means that
   the upload will only be attempted once and no retries will be done.  Positive integer value defaults to 0. -->
    <MaxUploadRetryCount>0</MaxUploadRetryCount>

    <!-- Keywords in RTPLAN label that identify the type of plan.  When an RTPLAN is found, its RTPlanLabel (DICOM attribute tag 300A,0002 )
    is searched for the keyword.  If found somewhere in that string (case insensitive), then it is considered that type of plan.  The
    'procedure' value must match (case insensitive) one of the enumerated types in RtplanType.  Each RtplanType may have more than one keyword.  If,
    when searching the RTPlanLabel attribute more than one type matches then it is considered an error.  For example, a RTPlanLabel should not
    have both 'obi' and 'phase2'.
    -->
    <RtplanTypeList>
        <RtplanType procedure="Phase2">
            <Keyword>phase2</Keyword>
        </RtplanType>
        <RtplanType procedure="DailyQA">
            <Keyword>OBI</Keyword>
        </RtplanType>
        <RtplanType procedure="LOC">
            <!-- <Keyword>LOC</Keyword> -->
        </RtplanType>
        <RtplanType procedure="LOCBaseline">
            <!-- <Keyword>LOCBaseline</Keyword> -->
        </RtplanType>
    </RtplanTypeList>

    <!-- Send files here for analysis.

    Note that the certificate of the analysis (AQA) host should be put in the static/certificates 
    directory.  This is required to support secure communications.  If the 
    certificate is not present, then this process will be unable to talk to the 
    host.  If the static/certificates directory is empty, then this process will 
    trust all hosts, which is a very bad security policy but can be useful for 
    debugging HTTPS connection problems.

    To get the certificate of the host, visit it with a web browser and the
    right click, get page information, and then security information.  It
    may be necessary to view details.  Certificate files will usually have the .pem or 
    .cer suffix.  This service supports both.   Different browsers interface 
    will vary.
       -->
    <!-- <AQAURL>https://localhost:9443</AQAURL> -->
    <!-- <AQAURL>https://uhroappwebsdv1.umhs.med.umich.edu:8111</AQAURL> -->
    <AQAURL>https://uhroappwebspr1.umhs.med.umich.edu:8111</AQAURL>

    <!-- Log into AQA with this user ID. -->
    <AQAUser>adminUMich</AQAUser>
    
    <!-- Log into AQA with this password. -->
    <AQAPassword>224adminUMich</AQAPassword>

    <!-- Amount of time in seconds to wait for the server to respond.  Must be a positive integer.  -->
    <ServerSocketTimeout_sec>300</ServerSocketTimeout_sec>

    <!-- AMQP broker host and port.  If the AMQB broker can not be contacted, then an error will
    be logged and EventNet support will not be provided. Defaults to 'localhost' and '5672'. -->
    <AMQPBrokerHost>localhost</AMQPBrokerHost>
    <AMQPBrokerPort>5672</AMQPBrokerPort>

    <!-- If a C-MOVE transfer fails, retry this many times. -->
    <DICOMRetryCount>3</DICOMRetryCount>

    <!-- If a C-MOVE transfer fails, wait this long (floating point in seconds) before retrying. -->
    <DICOMRetryWait_sec>1.0</DICOMRetryWait_sec>

    <!-- For DICOM C-MOVEs or C-FINDs, do not wait any longer than this to acquire the semaphore to use the connection.-->
    <DicomTimeout_sec>60.0</DicomTimeout_sec>

    <!-- Maximum data age to be considered relevant.  Maximum age of data as a floating point number in
    days for it to be uploaded to  the server.  If the data is older than this many days, it will not be
    uploaded.  If this values is not specified then all data will be uploaded, regardless of how old it is.  -->
    <MaximumDataAge_day>7.0</MaximumDataAge_day>
    
    <!-- Maximum data age to keep DICOM files stored locally in a file cache.  The term 'data age' refers to the time
    since the DICOM was captured.  Keeping files for some time period is
    mostly an aid for debugging.  Minimizing the number of files minimizes storage space requirements.
    Specified as a floating point number in days. -->
    <MaximumDICOMCacheDataAge_day>36600.0</MaximumDICOMCacheDataAge_day>
    
    <!-- Maximum file age to keep DICOM files stored locally in a file cache.  The term 'file age' refers to the time
    stamp of the DICOM file, regardless of when the DICOM was first created.  Keeping files for some time period is
    mostly an aid for debugging.  Minimizing the number of files minimizes storage space requirements.
    Specified as a floating point number in days.  -->
    <MaximumDICOMCacheFileAge_day>36600.0</MaximumDICOMCacheFileAge_day>

    <!-- Number of days to keep temporary zip files.  These are created as a prelude to performing an upload.
    Floating point number in days.  Default 14. -->
    <MaximumTemporaryZipFileAge_day>14.0</MaximumTemporaryZipFileAge_day>

    <!-- Time of day as hours and minutes (HH:MM) that program will restart
    itself. This is done to avoid errors that build up over time.  The time is
    formatted as a 24 hour clock, so 23:00 is eleven PM. -->
    <RestartTime>3:30</RestartTime>
    
    <!-- Amount of time as a floating point number in seconds to wait after uploading files to the AQA server.  After
    uploading files, the AQA server needs to save the DICOM files, which can take a few seconds.  After that, queries
    made to get the list of processed series will include those just uploaded.  This delay also functions to avoid
    overloading the AQA server.   This value gets resolved to the nearest millisecond. -->
    <GracePeriod_sec>15.0</GracePeriod_sec>
    
    <!-- Amount of time as a floating point number in seconds to wait between tries to confirm that more DICOM slices
    have not been received by the PACS. -->
    <!-- <ConfirmDicomCompleteInterval_sec>10.0</ConfirmDicomCompleteInterval_sec> -->
    <ConfirmDicomCompleteInterval_sec>1.0</ConfirmDicomCompleteInterval_sec>
    
    <!-- Amount of time as a floating point number in seconds to wait before assuming that all DICOM slices
    have been received by the PACS. -->
    <ConfirmDicomCompleteTimeout_sec>1.5</ConfirmDicomCompleteTimeout_sec>

    <!-- Interval in floating point minutes that dictates how frequently the list of Procedure Results should
    be updated.  Defaults to 60.0 . -->
    <ResultsRefreshInterval_min>60.0</ResultsRefreshInterval_min>

    <!-- Amount of time as a floating point number in seconds that limits how old the PatientProcedure
    list may get before it is refreshed from the server.   In other words, if there is a change in the
    PatientProcedure list on the server, it may take this long before the client reads it. -->
    <PatientProcedureAgeLimit_sec>60.0</PatientProcedureAgeLimit_sec>

    <!-- Polling interval for checking for new machine log files. Floating point in minutes. Default is 60 minutes. -->
    <MachineLogPollingInterval_min>0.5</MachineLogPollingInterval_min>

    <!-- List of directories to scan for machine log files. -->
    <MachineLogDirList>
      <MachineLogDir>D:\tmp\aqa\MachineLogs\test</MachineLogDir>
    </MachineLogDirList>

    <!-- When performing a C-FIND on Varian's VMSDBD service, there can be a problem where using the PatientID does not
    work.  For example, using 'BR1_OBI_QA_2023_Q1' will return nothing.  This seems to happen _mostly_ when the PatientID
    is longer than 16 characters, but because Varian is closed source we can't say for sure.

    The workaround is to use a pattern that is shorter, but will match the patient.  Tha pattern should match the
    minimum number of PatientIDs (ideally 1) but still match the desired patient.  When the pattern is used, the returned
    list is filtered so as only to return the originally desired PatientID.  If data from more patients is returned, they
    are removed from the result, but they do incur extra overhead.

    If this element is missing from the configuration file then a zero-sized list will be assumed.

    BTW: the pattern that works for BR1_OBI_QA_2023_Q1 is '*R1_OBI_QA_2023_*'
    -->
    <PatientIDCFindPatternMap>
      <PatientIDCFindPattern PatientID="BR1_OBI_QA_2023_Q1" pattern="*R1_OBI_QA_2023_*"/>
    </PatientIDCFindPatternMap>

    <!-- Machines must have one of these DeviceSerialNumbers otherwise they will not be uploaded to the AQA server. -->
    <ValidDeviceSerialNumberList>
        <ValidDeviceSerialNumber>3068</ValidDeviceSerialNumber>
        <ValidDeviceSerialNumber>1039</ValidDeviceSerialNumber>
        <ValidDeviceSerialNumber>4471</ValidDeviceSerialNumber>
        <ValidDeviceSerialNumber>3340</ValidDeviceSerialNumber>
        <ValidDeviceSerialNumber>2448</ValidDeviceSerialNumber>
        <ValidDeviceSerialNumber>3526</ValidDeviceSerialNumber>
        <ValidDeviceSerialNumber>3525</ValidDeviceSerialNumber>
    </ValidDeviceSerialNumberList>

    <!-- If true, process old Winston Lutz data.   This will be deprecated when old Winston Lutz data has been migrated.-->
    <ProcessOldWL>true</ProcessOldWL>

</AQAClientConfig>